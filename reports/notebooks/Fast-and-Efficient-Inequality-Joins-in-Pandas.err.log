Traceback (most recent call last):
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/samuel.oranyeli/mambaforge/envs/blogger/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%load_ext memory_profiler
from string import ascii_lowercase
import numpy as np
np.random.seed(1)
n = 2_000; k = 10_000

idx1 = np.random.randint(0, high = 100, size = n)
idx2 = np.random.randint(0, high = 100, size = n)

d1 = dict(x = np.random.choice(list(ascii_lowercase[:5]), size=n),
          start = np.minimum(idx1, idx2),
          end = np.maximum(idx1, idx2))

d2 = dict(x = np.random.choice(list(ascii_lowercase[:15]), size=k),
          pos1 = np.random.randint(low=60, high = 151, size=k))

d1 = pd.DataFrame(d1)
d2 = pd.DataFrame(d2)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[21], line 1[0m
[0;32m----> 1[0m [43mget_ipython[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mrun_line_magic[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mload_ext[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mmemory_profiler[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mstring[39;00m [38;5;28;01mimport[39;00m ascii_lowercase
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m

File [0;32m~/mambaforge/envs/blogger/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2480[0m, in [0;36mInteractiveShell.run_line_magic[0;34m(self, magic_name, line, _stack_depth)[0m
[1;32m   2478[0m     kwargs[[38;5;124m'[39m[38;5;124mlocal_ns[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_local_scope(stack_depth)
[1;32m   2479[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mbuiltin_trap:
[0;32m-> 2480[0m     result [38;5;241m=[39m [43mfn[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   2482[0m [38;5;66;03m# The code below prevents the output from being displayed[39;00m
[1;32m   2483[0m [38;5;66;03m# when using magics with decorator @output_can_be_silenced[39;00m
[1;32m   2484[0m [38;5;66;03m# when the last Python token in the expression is a ';'.[39;00m
[1;32m   2485[0m [38;5;28;01mif[39;00m [38;5;28mgetattr[39m(fn, magic[38;5;241m.[39mMAGIC_OUTPUT_CAN_BE_SILENCED, [38;5;28;01mFalse[39;00m):

File [0;32m~/mambaforge/envs/blogger/lib/python3.10/site-packages/IPython/core/magics/extension.py:33[0m, in [0;36mExtensionMagics.load_ext[0;34m(self, module_str)[0m
[1;32m     31[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m module_str:
[1;32m     32[0m     [38;5;28;01mraise[39;00m UsageError([38;5;124m'[39m[38;5;124mMissing module name.[39m[38;5;124m'[39m)
[0;32m---> 33[0m res [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mshell[49m[38;5;241;43m.[39;49m[43mextension_manager[49m[38;5;241;43m.[39;49m[43mload_extension[49m[43m([49m[43mmodule_str[49m[43m)[49m
[1;32m     35[0m [38;5;28;01mif[39;00m res [38;5;241m==[39m [38;5;124m'[39m[38;5;124malready loaded[39m[38;5;124m'[39m:
[1;32m     36[0m     [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mThe [39m[38;5;132;01m%s[39;00m[38;5;124m extension is already loaded. To reload it, use:[39m[38;5;124m"[39m [38;5;241m%[39m module_str)

File [0;32m~/mambaforge/envs/blogger/lib/python3.10/site-packages/IPython/core/extensions.py:62[0m, in [0;36mExtensionManager.load_extension[0;34m(self, module_str)[0m
[1;32m     55[0m [38;5;250m[39m[38;5;124;03m"""Load an IPython extension by its module name.[39;00m
[1;32m     56[0m 
[1;32m     57[0m [38;5;124;03mReturns the string "already loaded" if the extension is already loaded,[39;00m
[1;32m     58[0m [38;5;124;03m"no load function" if the module doesn't have a load_ipython_extension[39;00m
[1;32m     59[0m [38;5;124;03mfunction, or None if it succeeded.[39;00m
[1;32m     60[0m [38;5;124;03m"""[39;00m
[1;32m     61[0m [38;5;28;01mtry[39;00m:
[0;32m---> 62[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load_extension[49m[43m([49m[43mmodule_str[49m[43m)[49m
[1;32m     63[0m [38;5;28;01mexcept[39;00m [38;5;167;01mModuleNotFoundError[39;00m:
[1;32m     64[0m     [38;5;28;01mif[39;00m module_str [38;5;129;01min[39;00m BUILTINS_EXTS:

File [0;32m~/mambaforge/envs/blogger/lib/python3.10/site-packages/IPython/core/extensions.py:77[0m, in [0;36mExtensionManager._load_extension[0;34m(self, module_str)[0m
[1;32m     75[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mshell[38;5;241m.[39mbuiltin_trap:
[1;32m     76[0m     [38;5;28;01mif[39;00m module_str [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m sys[38;5;241m.[39mmodules:
[0;32m---> 77[0m         mod [38;5;241m=[39m [43mimport_module[49m[43m([49m[43mmodule_str[49m[43m)[49m
[1;32m     78[0m     mod [38;5;241m=[39m sys[38;5;241m.[39mmodules[module_str]
[1;32m     79[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_call_load_ipython_extension(mod):

File [0;32m~/mambaforge/envs/blogger/lib/python3.10/importlib/__init__.py:126[0m, in [0;36mimport_module[0;34m(name, package)[0m
[1;32m    124[0m             [38;5;28;01mbreak[39;00m
[1;32m    125[0m         level [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[0;32m--> 126[0m [38;5;28;01mreturn[39;00m [43m_bootstrap[49m[38;5;241;43m.[39;49m[43m_gcd_import[49m[43m([49m[43mname[49m[43m[[49m[43mlevel[49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mpackage[49m[43m,[49m[43m [49m[43mlevel[49m[43m)[49m

File [0;32m<frozen importlib._bootstrap>:1050[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m

File [0;32m<frozen importlib._bootstrap>:1027[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m

File [0;32m<frozen importlib._bootstrap>:1004[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m

[0;31mModuleNotFoundError[0m: No module named 'memory_profiler'
ModuleNotFoundError: No module named 'memory_profiler'

